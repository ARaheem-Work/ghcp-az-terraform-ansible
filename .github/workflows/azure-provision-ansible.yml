# GitHub Actions workflow to provision Azure PaaS resources with Terraform and configure them with Ansible
#
# This workflow assumes the following:
# - Azure credentials are stored as GitHub secrets: AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_SECRET
# - Ansible playbooks are in the ansible/ directory
# - Terraform code is in the terraform/ directory
# - env_vars.sh and tf_env_vars.sh set required environment variables

name: Provision Azure PaaS using Terraform and Configure with Ansible

on:
  workflow_dispatch: # Allows manual triggering in GitHub UI
  
jobs:
  azure_Provisioning:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_LOG: DEBUG
    steps:
      - name: Output Azure Credentials
        run: |
          echo "ARM_CLIENT_ID=$ARM_CLIENT_ID"
          echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID"
          echo "ARM_TENANT_ID=$ARM_TENANT_ID"
          echo "ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET"
          echo "Azure credentials are set."
          echo "TF_LOG=$TF_LOG"
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Upload Terraform Outputs
        id: tf_outputs
        working-directory: ./terraform
        run: |
          terraform output -json > tf_outputs.json
          echo "TF_OUTPUTS=$(cat tf_outputs.json | base64 -w0)" >> $GITHUB_ENV

  ansible_configuration:
    runs-on: ubuntu-latest
    needs: azure_Provisioning
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible and Azure dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible[azure] azure-cli

      - name: Prepare Ansible Environment Variables
        run: |
          source ./ansible/env_vars.sh

      - name: Decode Terraform Outputs
        run: |
          echo "${{ needs.azure_Provisioning.outputs.TF_OUTPUTS }}" | base64 -d > tf_outputs.json
          export RESOURCE_GROUP_NAME=$(jq -r .resource_group_name.value tf_outputs.json)
          echo "RESOURCE_GROUP_NAME=$RESOURCE_GROUP_NAME" >> $GITHUB_ENV
          export APP_SERVICE_NAME=$(jq -r .app_service_name.value tf_outputs.json)
          echo "APP_SERVICE_NAME=$APP_SERVICE_NAME" >> $GITHUB_ENV

      - name: Run Ansible Playbook
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_SECRET: ${{ secrets.AZURE_SECRET_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          ansible-playbook -i localhost, ./ansible/create_rg.yml --extra-vars "resource_group_name=$RESOURCE_GROUP_NAME app_service_name=$APP_SERVICE_NAME"
